version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  setup:
    docker:
      - image: circleci/node:12.1.0
    working_directory: ~/checkout
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ .Branch }}-{{ checksum "app/package-lock.json"}}
            - npm-deps-{{ .Branch }}
            - npm-deps-
      - run:
          name: install
          command: npm install
          working_directory: app
      - save_cache:
          key: npm-deps-{{ .Branch }}-{{ checksum "app/package-lock.json"}}
          paths:
            - app/node_modules
      - run:
          name: test
          command: |
            sudo npm install -g ask-cli@2.1.1 --unsafe-perm
            mkdir -p ~/.ask
            MecabAPI_URL=http://${MecabAPI_URL}
            echo "${ASK_CLI_CONFIG}" > ~/.ask/cli_config
            export APP_ID=$APPID
            npm test
          working_directory: app
      - run:
          name: build
          command: |
            npm run build
          working_directory: app
      - run:
          name: layer-install
          command: |
            mkdir -p libs/nodejs
            cp package.json package-lock.json libs/nodejs
            # プロダクション用のパッケージだけインストールする
            npm install --prefix libs/nodejs --production
          working_directory: app
      - persist_to_workspace:
          root: ~/checkout/app
          paths:
            - "dist/*"
            - "libs/*"
  deploy:
    executor: aws-cli/default
    working_directory: ~/checkout
    steps:
      - checkout
      - aws-cli/install
      - attach_workspace:
          at: ~/checkout/app
      - deploy:
          command: |
            APIURL=http://${MecabAPI_URL}
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              RUNLEVEL="INFO"
              AWS_DEFAULT_REGION=${PRODUCTION_REGION}
            else
              RUNLEVEL="DEBUG"
              AWS_DEFAULT_REGION=${TEST_REGION}
            fi

            # lambdaでは1980年以前のタイムスタンプを持つファイルをzipできないためざっくりと1981年以前のファイル日時を更新する
            YEAR_DIFF=$(expr `date +%Y` - 1981)
            DATE_DIFF=$(expr $YEAR_DIFF \* 365)
            find ../app/libs/nodejs/node_modules -daystart -mtime +$DATE_DIFF -exec touch {} \;

            aws cloudformation package --s3-bucket lambda-function-deployment-${AWS_DEFAULT_REGION} --s3-prefix throwtrashskill --template-file template.yml --output-template-file packaged-template.yml
            aws cloudformation deploy --template-file packaged-template.yml --stack-name=ThrowTrashSkill --parameter-overrides AppID=${APPID} RunLevel=${RUNLEVEL} ApiUrl=${APIURL} ReminderProductID=${REMINDER_PRODUCT_ID} --role-arn ${CloudFormationRole} --capabilities CAPABILITY_NAMED_IAM
          working_directory: deploy
  publish:
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - run:
          name: versioning
          command: |
            PUBLISH_VERSION=$(aws lambda publish-version --function-name ThrowTrashSkill | jq '.Version')
            echo "export PUBLISH_VERSION=${PUBLISH_VERSION}" >>  $BASH_ENV
            aws lambda add-permission --function-name ThrowTrashSkill:${PUBLISH_VERSION} --statement-id alexa --action lambda:InvokeFunction --principal alexa-appkit.amazon.com --event-source-token ${APPID}
      - run:
          name: publish
          command: |
            aws lambda update-alias --function-name ThrowTrashSkill --function-version ${PUBLISH_VERSION} --name RELEASE
workflows:
  all_build:
    jobs:
      - setup:
          context: aws-test
          filters:
            branches:
              ignore: main
      - deploy:
          context: aws-deploy
          requires:
            - setup
          filters:
            branches:
              ignore: main
      - publish:
          context: aws-deploy
          filters:
            branches:
              only: main
