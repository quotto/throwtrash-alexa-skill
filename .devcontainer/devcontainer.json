// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.117.1/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",
	"workspaceFolder": "/workspace",
	"build" : {
		"dockerfile": "Dockerfile",
	},
	"mounts": [
      "source=${localEnv:USERPROFILE}/.aws,target=/root/.aws,type=bind,consistency=cached",
      "target=/workspace/app/node_modules",
      "target=/workspace/batch/node_modules",
	],
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",



	// Set *default* container specific settings.json values on container create.
	// "settings": {
	// 	"terminal.integrated.shell.linux": "/bin/bash"
	// },

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["dbaeumer.vscode-eslint","ms-vscode.vscode-typescript-next"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing git.
	// "postCreateCommand": "apt-get update && apt-get install -y git",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
